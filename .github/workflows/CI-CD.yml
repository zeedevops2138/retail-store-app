name: CI/CD for Microservices with ECR + Helm

on:
  push:
    paths:
      - 'src/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      ECR_REGISTRY: "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Detect changed microservices
        id: changes
        run: |
          git fetch origin main
          git diff --name-only origin/main HEAD > changed_files.txt
          grep '^src/' changed_files.txt | cut -d/ -f2 | sort -u > changed_services.txt || true
          echo "Changed services:"
          cat changed_services.txt

      - name: Build, push to ECR, and update Helm values
        if: success()
        run: |
          while read service; do
            IMAGE_NAME="${ECR_REGISTRY}/${service}"
            IMAGE_TAG="latest"
            IMAGE_URI="${IMAGE_NAME}:${IMAGE_TAG}"

            echo "üîß Processing service: $service"
            cd src/$service

            # Create ECR repo if not exists
            aws ecr describe-repositories --repository-names "$service" >/dev/null 2>&1 || \
              aws ecr create-repository --repository-name "$service"

            # Build Docker image
            docker build -t "$IMAGE_URI" .

            # Push to ECR
            docker push "$IMAGE_URI"

            # Update Helm values.yaml with new image
            VALUES_FILE="chart/values.yaml"
            if [[ -f "$VALUES_FILE" ]]; then
              echo "üîÅ Updating $VALUES_FILE with image: $IMAGE_URI"
              yq eval ".image.repository = \"${IMAGE_NAME}\" | .image.tag = \"${IMAGE_TAG}\"" -i "$VALUES_FILE"
            fi

            cd ../../
          done < changed_services.txt

      - name: Commit and push updated Helm charts
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add src/*/chart/values.yaml
          git commit -m "Update image references in Helm values.yaml" || echo "No changes to commit"
          git push
